n cueball asks if an off panel character can look at his bug report the person asks if it's a normal one and not a horrifying one which proves that the whole project is broken beyond repair and should be burnt to the ground this implies that there have been reports of the horrifying variety in the past  cueball promises that it is a normal one but it turns out that the server crashes when a user's password is a resolvable url which implies that the server is in some way attempting to resolve passwords as if they were urls a resolvable url is one that is syntactically correct and refers to a find able and accessible resource on the internet ie does not return a 404 error or equivalent when resolved  therefore a resolvable url is a fully qualified domain name or a valid ip address that points to a valid server and it can optionally specify a resource that exists on that server  normally there is no reason for a system to treat a password as if it were a url also cueball specifically states that the server is crashing rather than his application  while this could be an example of misused terminology on the part of cueball or randall given cueball's history for example causing the most basic console commands to fail in 1084 server problem or other tech issues as seen in 1586 keyboard problems his choice of terms is probably accurate  in the context of web services the server refers to either the computer itself or the program that responds to web requests and executes the user's ie cueball's application  cueball would be in charge of building the application  the importance of this distinction is that a typical system has safe guards in place at many levels to prevent a misbehaving application from crashing anything other than itself  so for his application to crash the server either the computer itself or the server software hosting his application would require his application to be operating in a way far outside of the norm which has been the case for cueball in previous comics  alternatively the project might include its own server software without the safeguards  in either case it is clear that cueball's issue is far from normal for which reason the off panel person gives up and decides that burning the project to the ground is the only solution telling cueball i'll get the lighter fluid  in the title text another two issues with cueball's program are mentioned together with a possible solution that would fix all three problems at once the second problem is a unicode handling bug in the url request library and the third is that the passwords are stored unsalted  the proposed solution is to salt the passwords with emoji unicode multi byte characters which is claimed to solve all three issues at once  salting passwords means that random characters are added to the password before it is cryptographically secured and stored in the database salting increases security in the event that the database is compromised by ensuring that users with the same password will not have the same password hash  this makes some attacks that can be used to crack hash databases such as rainbow tables effectively impossible salting passwords with emoji can potentially fix these bugs in different ways  first emoji and other unicode characters are not valid characters in urls  as a result the salted passwords will no longer be resolvable urls this will presumably circumvent but not actually fix the bug that causes the server to crash  in addition the passwords will now be salted increasing security  there is no obvious way that this would actually fix a unicode handling bug in the url request library  given cueball's general approach to problems like this the best explanation is probably that he hasn't fixed the bug but rather that it is no longer a bug because he is relying on its behavior to help fix these other issues ie the classic it's not a bug it's a feature the title text shows that his general approach to problems is not to actually fix bugs but to work around them and even rely on them for other behavior  this approach to software development makes for terrible code which is likely how cueball got into this trouble in the first place  therefore the title text shows that he still has yet to learn from his mistakes further supporting the suggestion to just burn the whole thing down given that this comic comes only five comics after 1695 code quality 2 it seems likely that the off panel person is ponytail and as could be seen in the first of those two comics 1513 code quality the perpetrator is indeed cueball in the title text of the first using emoji in variable names is mentioned emoji has since then become a recurrent theme on xkcd in 1349 shouldn't be hard cueball is also programming and finding it very difficult although he thinks it should be easy an off panel person suggests burning the computer down with a blowtorch much like the off panel person in this one suggests burning the whole project including the computer to the ground with lighter fluid in the next comic with multiple storylines 1350 lorenz one story line results in a computer being burned with a blow torch  