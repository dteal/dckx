n in some companies programmers can find themselves under employed this may be because these companies have little programming work until something breaks or needs upgrading or perhaps they are between projects or simply waiting for a go ahead  coders still need to make themselves available to perform emergency fixes but they may have no other assigned work this requires them to find constructive ways to spend their time  or unconstructive if that is more fun dvorak is a keyboard layout that was proposed in 1936 as an alternative to the existing entrenched qwerty layout developed in the 1870s the qwerty keyboard is the standard in the us but some features in its layout are  based on mechanical considerations rather than the optimum placement for typing speed for example common letter combinations such as 'st' and 'th' had to be arranged so that their operating levers were separated from each other lest they cause jams and slow down the typist more than sixty years later such mechanical considerations could be overcome and dvorak designed his keyboard layout with typing efficiency in mind the dvorak keyboard was ultimately unsuccessful it still persists today but has never threatened the dominance of the qwerty keyboard  even if the dvorak layout is  more efficient which is still a matter for debate see the uncomfortable truth in 561 well qwerty was and is the standard this means that every keyboard user has to learn qwerty anyway and there is insufficient benefit in spending the time to learn a new layout especially when you would have to switch back and forth between dvorak and qwerty as the situation demands therefore even seriously considering the switch is a sign that you really have nothing better to do  another joke is that even though the coder has plenty of spare time on his hands to practice on dvorak he has only been able to 'almost' match his old typing speed dvorak has been referenced a few times later also after the well comic see above for instance in 977 map projections it was stated that those who preferred the dymaxion projection would write in dvorak and another comic also about efficiency 1445 efficiency mentions in the title text how randall used lots of time testing to see if dvorak is faster gopher is a defunct internet protocol which has been completely superseded by http it's a perfect example of the kind of thing a programmer might implement in the absence of other more useful work as an aside the protocol is named for the mascot of the university of minnesota where it was developed html and xhtml are markup languages used to describe web documents xhtml strict is a more restricted version of xhtml that excludes certain redundant tags like &lt;center&gt; which is theoretically no longer necessary now that &lt;div&gt; and &lt;span&gt; exist haiku on the other hand is a kind of japanese poetry rather than having a rhyming meter like western poetry japanese poetry has strict restrictions on syllable count; a haiku must contain three lines containing 5 7 and 5 syllables respectively the section of code given is html markup and would be read by a web developer like this  div class equals main span id equals marquee blog end span end div or alternatively slash span slash div  which can be divided in syllables like this  div class e quals main span i d e quals mar quee blog end span end div  this meets the syllable requirements restricting yourself to writing markup in this form would be extremely challenging and time consuming and pointless so it too is a good sign that coders need more real work to do the title text notes that if you are one of those assholes that are actually pronouncing the angle brackets then it would be even harder to write html in haiku format left angle bracket and right angle bracket take up five syllables each on their own the asshole part is randall's opinion about those who do pronounce &lt;&gt; haiku was mentioned later in 622 haiku proof finally the last panel mentions the biggest timesink of them all webcomics or even worse wikis devoted to explaining the jokes in webcomics  