n\nFor any engineering task, there are numerous ways a given problem can be solved. The more complex the task, the more room for diversity. That\'s all well and good for a one-off problem, but if a design is meant to be iterated over time, or if an entire industry is solving that same problem, part reuse and interoperability become issues to deal with. Standards thus came to exist so that industries could avoid wasting resources reinventing the wheel, whilst offering their clients a certain amount of simplicity and compatibility between vendors.\nBut, standards have issues of their own. They don\'t accommodate every use case, they might have restrictions or royalties attached, and people tend to be plagued by Not Invented Here syndrome. So, competing standards have a tendency to arise to address different perceived needs. After a while, the market for competing standards gets messy and hard to follow, and integrating systems built around competing standards gets burdensome. As a result, someone eventually takes on the challenge of creating a universal standard that everyone can rally around.\nThis almost never works. In many cases, a new standard fails to displace the incumbent standard, and eventually loses funding and support, becoming a relic of history. In many other cases, it only penetrates far enough to survive, ironically making the situation messier. The latter situation often ends up becoming cyclical, with new standards periodically rising and failing to gain traction.\n\n