n\nThis comic is a reaction to the recent reveal of a U.S. electronic telecom surveillance program called PRISM, run by the NSA. You can read a Guardian article about it. PRISM, leaked by a former NSA official, incited some controversy since it provides government access to private data (e-mails, videos, chats, file transfers, etc.). \nDwarf Fortress is a freeware strategy game in which the player builds a civilization by giving orders to \xe2\x80\x94 as opposed to directly controlling \xe2\x80\x94 a group of dwarves. It is famous for having a very detailed simulation of its world and for allowing deep micro-management (as well as an incredibly steep learning curve).\n"Big Brother" means "a tyrannical government body that constantly monitors all its citizens." The term comes from the classic dystopian novel Nineteen Eighty-Four by George Orwell, wherein propaganda videos are narrated by an actor with the stage name of Big Brother and the dystopia\'s surveillance system is said to be monitored by Big Brother himself.\nCueball has a discussion with Big Brother ("corporate surveillance state"), in which he mocks Big Brother\'s interest in the inconsequential activity of playing a video game ("Dwarf Fortress" in particular) by drawing a parallel between Big Brother\'s omniscient surveillance of Cueball and Cueball\'s omniscient surveillance of the dwarfs. Big Brother appears to be mortified when it realizes the accuracy of Cueball\'s comparison.\nInformally, a system exhibits Turing-completeness when it is theoretically capable of executing any algorithm. One of the simplest Turing-complete systems is the Turing machine, a device that manipulates symbols on a strip of tape according to a table of rules \xe2\x80\x94 it can be proven to have the same capabilities as any ordinary programming language. Other very simple systems include Rule 110, lambda calculus, Conway\'s game of life, and Brainfuck. The reason we don\'t work with these is because they\'re a real pain in the ass. Would you rather build a network of spaceships that collide with each other to simulate the successor function, or just write i&#160;:= i + 1?\nA common CS nerd challenge is to prove the Turing-completeness of a system that wasn\'t intended to be that way &#8212; games in particular. The usual way to do this is to construct a Turing machine simulator within the system. It has been done for Dwarf Fortress, (infinite) Minesweeper (pdf), Magic the Gathering, Little Big Planet, Minecraft (another Minecraft example), Pok\xc3\xa9mon Yellow (through the elaborate use of many in-game glitches) and 3D chess (but see the note below). These kinds of proofs often involve formulating ridiculously complex creations just to simulate a little machine writing symbols on a tape!\n(Technically, a computer is not really Turing-complete. A Turing-complete system has to have unlimited space, and that\'s not possible for a memory-limited computer or any software running inside it. But even if we don\'t have access to Turing-completeness, we can build a theoretical machine and show how it can be extended indefinitely. In a few of the games, we prove Turing-completeness in infinite variants.)\nFinally, Randall makes a crack that users will try to nest their Turing-complete computers; after finishing his Turing-complete Dwarf Fortress computer, someone else will try to make the Dwarf Fortress computer run Minecraft (a highly inefficient process that would be a nightmare to co-ordinate, and would run incredibly slowly).\n\n