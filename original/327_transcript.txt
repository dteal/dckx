n\nMrs. Roberts receives a call from her son\'s school. The caller, likely one of the school\'s administrators, asks if she really named her son Robert\'); DROP TABLE students;--, a rather unusual name. Perhaps surprisingly, Mrs. Roberts responds in the affirmative, claiming that she uses the nickname "Little Bobby Tables". As the full name is read into the school\'s system\'s databases without data sanitization, it causes the student table in the database to be deleted.\nThe title of this comic is a pun. Exploit can mean an accomplishment or heroic deed, but in computer science the term refers to a program or technique that takes advantage of a vulnerability in other software. In fact, one could say that her exploit is to exploit an exploit (her achievement is to make use of a vulnerability). The title can also refer to her choice of name for her son, which is rather extraordinary.\nIn SQL, a database programming language, commands are separated by semicolons ; and strings of text are often delimited using single quotes \'. Parts of commands may also be enclosed in parentheses ( and ).  Data entries are stored as "rows" within named "tables" of similar items (e.g. Students).  The command to delete an entire table (and every row of data in that table) is DROP TABLE, as in DROP TABLE Students;.\nThe exploited vulnerability here is that the single quote in the name input was not correctly "escaped" by the software. That is, if a student\'s name did indeed contain a quote mark, it should have been parsed as one of the characters making up the text string and not as the marker to close the string, which it erroneously was. Lack of such escaping is a common SQL vulnerability; this type of exploit is referred to as SQL injection. Mrs. Roberts thus reminds the school to make sure they have added data filtering code to prevent code injection exploits in the future.\nFor example, to add information about Elaine to a data table called \'Students\' the SQL query could be:\nINSERT INTO Students (firstname) VALUES (\'Elaine\');\n\nHowever, using the odd name Robert\');DROP TABLE Students;--&#160; where we used "Elaine" above, the SQL query becomes:\nINSERT INTO Students (firstname) VALUES (\'Robert\');DROP TABLE Students;--&#160;\');\n\nBy insertion of the two semi-colons in the odd name this is now three well formed SQL commands:\n\nINSERT INTO Students (firstname) VALUES (\'Robert\');\nDROP TABLE Students;\n--&#160;\');\n\n\nThe first line is valid SQL code that will legitimately insert data on a Student called Robert.\nThe second line is valid injected SQL code that will delete the whole Student data table from the database.\nThe third line is a valid code comment ( --&#160; denotes a comment) which will be ignored by the SQL server.\nFor this to work, it helps to know a little about the structure of the database. But it\'s quite a good guess that a school\'s student management database might have a table named Students. \nOf course, in real life most exploits of this kind would be performed not by socially engineering a person\'s name such that it would eventually be entered into a school database query, but rather by accessing some kind of input system (such as a website\'s login screen or search interface) and guessing various combinations by trial and error until something works, perhaps by first trying to inject the SHOW TABLES command to see how the database is structured.\nTo correctly and harmlessly include the odd name in the Students table in the school database the correct SQL is:\nINSERT INTO Students (firstname) VALUES (\'Robert\\\');DROP TABLE Students;--&#160;\');\nNote that the single quote after Robert is now sanitized by a backslash, which changes it from malicious code to harmless data.\nIt should be noted that while data sanitization can mitigate the risks of SQL injection, the proper prevention technique is to use Prepared statements.\nThe XKCD title text references that Mrs. Roberts\' daughter is named "Help I\'m trapped in a driver\'s license factory". This is a play on how if someone is stuck and forced to work in a manufacturing factory/plant then they will write on the product "Help I am trapped in a ____ factory" in order to tell people on the outside. Having this name would cause any police officer that pulls her over to show some concern, as well as getting the license in the first place would be difficult. The idea of inserting a help message like this was already used in 10: Pi Equals.\nThis xkcd comic has become rather famous, spawning at a site about preventing SQL injection named http://bobby-tables.com and also at the official Python SQLite documentation. Noted security expert Bruce Schneier (who often quotes xkcd) mentioned a similar attack which happened in the 2014 Swedish general elections.\nIt is later revealed in 342: 1337: Part 2 that the daughters middle name is Elaine (full name: Help I\'m trapped in a driver\'s license factory Elaine Roberts), and this is thus the first time Elaine is mentioned. Seems like this comic was just a setup for the "1337" series where both this exploiting mom\'s kids are shown for the first time.\n\n